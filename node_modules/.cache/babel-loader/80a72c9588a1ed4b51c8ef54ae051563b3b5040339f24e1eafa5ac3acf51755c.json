{"ast":null,"code":"var _jsxFileName = \"/home/andrewwang/MoneyWatcher/src/pages/AddItem.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport ErrorBoxWithLink from \"./ErrorBoxWithLink\";\nimport { getJsonData, buildIpAddress } from \"../components/common\";\nimport { Link } from 'react-router-dom';\nimport MainContext from \"./MainContext\";\nimport \"./AddItem.css\";\nimport \"../css/styles.css\";\nimport { set } from \"mongoose\";\nimport NotLoggedInError from \"./NotLoggedInError\";\nimport DemoInstructions from \"./DemoInstructions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddItem = () => {\n  _s();\n  const [errmsg, setErrmsg] = React.useState([]);\n  const ctx = React.useContext(MainContext);\n  const [selected, setSelected] = React.useState(new Set());\n  const [tokens, setTokens] = React.useState([{\n    bank: \"loading from Plaid\",\n    token: \"loading\"\n  }]);\n  const [currentTokens, setCurrentTokens] = React.useState([]);\n  // console.log(\"AddItem\");\n  function handleErrorClose() {\n    console.log('reset');\n    setErrmsg(''); // Clear the error message, hiding the error box\n  }\n  if (ctx.active === \"0\") {\n    return /*#__PURE__*/_jsxDEV(NotLoggedInError, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this);\n  }\n  React.useEffect(() => {\n    getJsonData(\"/api/v1/item/get_all\", {}).then(d => {\n      d.json().then(json => {\n        if (json.status === \"success\") {\n          setTokens(json.data);\n          console.log(json.data);\n        }\n      });\n    });\n    getJsonData(\"/api/v1/customer/bank\", {}).then(d => {\n      d.json().then(json => {\n        if (json.status === \"success\") {\n          let tokenArray = json.data.map(obj => obj.access_token);\n          console.log(tokenArray);\n          setCurrentTokens(tokenArray);\n        }\n      });\n    });\n  }, []);\n  function handleErrorClose() {\n    setErrmsg(''); // Clear the error message, hiding the error box\n  }\n  ;\n  async function listSubmit(event) {\n    console.log(\"listSubmit\");\n    event.preventDefault();\n    const newmsg = [];\n    const promises = [];\n    const used = [];\n    setErrmsg([]);\n    for (const el of event.target) {\n      if (el.getAttribute(\"type\") === \"checkbox\" && el.checked) {\n        const data = {\n          access_token: el.getAttribute(\"value\")\n        };\n        promises.push(getJsonData(\"/api/v1/customer/item\", data));\n        used.push(data.access_token);\n        // .then((json) => {\n        //     // newmsg.push(<div>{el.getAttribute(\"value\")}:  {json.status} {json.status === \"failure\" ? \": \" + json.message : \"\"}<br /></div>);\n        //     errmsg.push(<div>HI</div>);\n        //     console.log(errmsg);\n        //     setErrmsg(errmsg);\n        //     if (json.message === \"user doesn't exist\" || json.message === \"not logged in\") {\n        //         localStorage.setItem(\"token\", \"\");\n        //         ctx.setActive1(\"0\");\n        //     }\n        // }).catch((err) => {\n        // });\n      }\n    }\n    const res = await Promise.all(promises).catch(err => {\n      console.log(\"?\");\n    });\n    if (!Array.isArray(res)) {\n      setErrmsg(\"bad\");\n      return;\n    }\n    for (let i = 0; i < res.length; i++) {\n      const json = await res[i].json();\n      newmsg.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [used[i], \": \", json.status, \" \", json.status === \"fail\" ? \"- \" + json.message : \"\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 106\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 25\n      }, this));\n      if (json.message === \"jwt malformed\" || json.message === \"user doesn't exist\" || json.message === \"not logged in\") {\n        localStorage.setItem(\"token\", \"\");\n        ctx.setActive1(\"0\");\n      }\n    }\n    getJsonData(\"/api/v1/customer/bank\", {}).then(d => {\n      d.json().then(json => {\n        if (json.status === \"success\") {\n          let tokenArray = json.data.map(obj => obj.access_token);\n          console.log(tokenArray);\n          setCurrentTokens(tokenArray);\n        }\n      });\n    });\n    setErrmsg(newmsg);\n  }\n  function handleCheck(el) {\n    const value = el.target.getAttribute(\"value\");\n    if (el.target.checked === false) {\n      selected.delete(value);\n    } else {\n      selected.add(value);\n    }\n    setSelected(selected);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"blueHeader\",\n      children: \"Plaid Testing Bank Accounts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"leftAlignedText\",\n      children: \"This MoneyWatcher demo server has created several testing bank accounts in the Plaid sandbox environment. The testing bank accounts have simulated transactions. Please select one or more from the following accounts to be used for demo.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: listSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"tokens\",\n        children: tokens.map((token, index) => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              defaultChecked: currentTokens.includes(token.token),\n              id: `token${index}`,\n              value: token.token,\n              onClick: handleCheck\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"labelTextBankAccount\",\n              htmlFor: `token${index}`,\n              children: [token.bank, \" \", token.token === \"loading\" ? \"\" : \" : \" + token.token.slice(-5)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 29\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 32\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"reset\",\n          className: \"centered-button\",\n          children: \" Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"centered-button\",\n          children: \"Add Selected\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }, this), errmsg]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 9\n  }, this);\n};\n_s(AddItem, \"XM2GW+tUSr+AB37yUAW4/60j5s0=\");\n_c = AddItem;\nexport default AddItem;\nvar _c;\n$RefreshReg$(_c, \"AddItem\");","map":{"version":3,"names":["React","ErrorBoxWithLink","getJsonData","buildIpAddress","Link","MainContext","set","NotLoggedInError","DemoInstructions","jsxDEV","_jsxDEV","AddItem","_s","errmsg","setErrmsg","useState","ctx","useContext","selected","setSelected","Set","tokens","setTokens","bank","token","currentTokens","setCurrentTokens","handleErrorClose","console","log","active","fileName","_jsxFileName","lineNumber","columnNumber","useEffect","then","d","json","status","data","tokenArray","map","obj","access_token","listSubmit","event","preventDefault","newmsg","promises","used","el","target","getAttribute","checked","push","res","Promise","all","catch","err","Array","isArray","i","length","children","message","localStorage","setItem","setActive1","handleCheck","value","delete","add","className","onSubmit","index","type","defaultChecked","includes","id","onClick","htmlFor","slice","_c","$RefreshReg$"],"sources":["/home/andrewwang/MoneyWatcher/src/pages/AddItem.js"],"sourcesContent":["import React from \"react\";\nimport ErrorBoxWithLink from \"./ErrorBoxWithLink\";\nimport { getJsonData, buildIpAddress } from \"../components/common\";\nimport { Link } from 'react-router-dom'\nimport MainContext from \"./MainContext\"\nimport \"./AddItem.css\"\nimport \"../css/styles.css\"\nimport { set } from \"mongoose\";\nimport NotLoggedInError from \"./NotLoggedInError\";\nimport DemoInstructions from \"./DemoInstructions\";\n\nconst AddItem = () => {\n    const [errmsg, setErrmsg] = React.useState([]);\n    const ctx = React.useContext(MainContext);\n    const [selected, setSelected] = React.useState(new Set());\n    const [tokens, setTokens] = React.useState([{bank: \"loading from Plaid\",\n        token: \"loading\"}]);\n    const [currentTokens, setCurrentTokens] = React.useState([]);\n    // console.log(\"AddItem\");\n    function handleErrorClose()  {\n        console.log('reset');\n        setErrmsg(''); // Clear the error message, hiding the error box\n    }\n    if (ctx.active === \"0\") {\n        return (\n            <NotLoggedInError />\n        )\n    }\n    React.useEffect(() => {\n        getJsonData(\"/api/v1/item/get_all\", {}).then((d) => {\n            d.json().then((json) => {\n                if (json.status === \"success\") {\n                    setTokens(json.data);\n                    console.log(json.data);\n                }\n            })\n        });\n        getJsonData(\"/api/v1/customer/bank\", {}).then((d) => {\n            d.json().then((json) => {\n                if (json.status === \"success\") {\n                    let tokenArray = json.data.map(obj => obj.access_token);\n                    console.log(tokenArray);\n                    setCurrentTokens(tokenArray);\n                }\n            })\n        });\n    }, []);\n\n    function handleErrorClose()  {\n        setErrmsg(''); // Clear the error message, hiding the error box\n      };\n    async function listSubmit(event) {\n        console.log(\"listSubmit\");\n        event.preventDefault();\n        const newmsg = [];\n        const promises = [];\n        const used = [];\n        setErrmsg([]);\n        for (const el of event.target) {\n            if (el.getAttribute(\"type\") === \"checkbox\" && el.checked) {\n                const data = {\n                    access_token: el.getAttribute(\"value\")\n                }\n                promises.push(getJsonData(\"/api/v1/customer/item\", data));\n                used.push(data.access_token);\n                // .then((json) => {\n                //     // newmsg.push(<div>{el.getAttribute(\"value\")}:  {json.status} {json.status === \"failure\" ? \": \" + json.message : \"\"}<br /></div>);\n                //     errmsg.push(<div>HI</div>);\n                //     console.log(errmsg);\n                //     setErrmsg(errmsg);\n                //     if (json.message === \"user doesn't exist\" || json.message === \"not logged in\") {\n                //         localStorage.setItem(\"token\", \"\");\n                //         ctx.setActive1(\"0\");\n                //     }\n                // }).catch((err) => {\n                // });\n            }\n        }\n        const res = await Promise.all(promises).catch((err) => {\n            console.log(\"?\");\n        });\n        if (!Array.isArray(res)) {\n            setErrmsg(\"bad\");\n            return;\n        }\n        for (let i = 0; i < res.length; i++) {\n            const json = await res[i].json();\n            newmsg.push(<div>{used[i]}: {json.status} {json.status === \"fail\" ? \"- \" + json.message : \"\"}<br /></div>);\n            if (json.message === \"jwt malformed\" || json.message === \"user doesn't exist\" || json.message === \"not logged in\") {\n                localStorage.setItem(\"token\", \"\");\n                ctx.setActive1(\"0\");\n            }\n        }\n        getJsonData(\"/api/v1/customer/bank\", {}).then((d) => {\n            d.json().then((json) => {\n                if (json.status === \"success\") {\n                    let tokenArray = json.data.map(obj => obj.access_token);\n                    console.log(tokenArray);\n                    setCurrentTokens(tokenArray);\n                }\n            })\n        });\n        setErrmsg(newmsg);\n    }\n\n    function handleCheck(el) {\n        const value = el.target.getAttribute(\"value\");\n        if (el.target.checked === false) {\n            selected.delete(value);\n        } else {\n            selected.add(value);\n        }\n        setSelected(selected)\n    }\n   \n    return (\n        <div>\n\n            <h2 className=\"blueHeader\">Plaid Testing Bank Accounts</h2>\n            <p className=\"leftAlignedText\">\n                This MoneyWatcher demo server has created several testing bank accounts in the Plaid sandbox\n                environment.\n                The testing bank accounts have simulated transactions. Please select one or more from the following\n                accounts\n                to be used for demo.\n            </p>\n            {/* <div>\n                    <label htmlFor=\"token\">Access token: </label>\n                    <input id=\"token\" type=\"token\" name=\"token\" required size=\"50\" />\n                </div>\n                <p className=\"form-actions\">\n                    <button type=\"reset\" className=\"button button-flat\">\n                        Reset\n                    </button>\n                    <button type=\"submit\" className=\"button\">\n                        Add (manually input a token above)\n                    </button>\n                </p> */}\n\n\n            <form onSubmit={listSubmit}>\n                <ul className=\"tokens\">\n                    {tokens.map((token, index) => {\n\n                        return <li key={index}>\n                            <input type=\"checkbox\" defaultChecked={currentTokens.includes(token.token)}\n                                   id={`token${index}`} value={token.token} onClick={handleCheck} />\n                            <label className=\"labelTextBankAccount\" htmlFor={`token${index}`}>\n                            {token.bank} {token.token === \"loading\" ? \"\" : \" : \" + token.token.slice(-5)}</label>\n                        </li>\n                    })}\n                </ul>\n                <div className=\"button-container\">\n                <button type=\"reset\" className=\"centered-button\"> Reset</button>\n                <button type=\"submit\" className=\"centered-button\">Add Selected</button>\n                </div>\n            </form>\n            {errmsg}\n        </div>\n    )\n}\n\nexport default AddItem;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}