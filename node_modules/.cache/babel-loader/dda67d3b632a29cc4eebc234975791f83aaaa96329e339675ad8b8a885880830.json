{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\n// istanbul ignore next\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\nvar _utils = require('../utils');\nvar _exception = require('../exception');\nvar _exception2 = _interopRequireDefault(_exception);\nexports['default'] = function (instance) {\n  instance.registerHelper('with', function (context, options) {\n    if (arguments.length != 2) {\n      throw new _exception2['default']('#with requires exactly one argument');\n    }\n    if (_utils.isFunction(context)) {\n      context = context.call(this);\n    }\n    var fn = options.fn;\n    if (!_utils.isEmpty(context)) {\n      var data = options.data;\n      if (options.data && options.ids) {\n        data = _utils.createFrame(options.data);\n        data.contextPath = _utils.appendContextPath(options.data.contextPath, options.ids[0]);\n      }\n      return fn(context, {\n        data: data,\n        blockParams: _utils.blockParams([context], [data && data.contextPath])\n      });\n    } else {\n      return options.inverse(this);\n    }\n  });\n};\nmodule.exports = exports['default'];","map":{"version":3,"names":["instance","registerHelper","context","options","arguments","length","_exception2","_utils","isFunction","call","fn","isEmpty","data","ids","createFrame","contextPath","appendContextPath","blockParams","inverse"],"sources":["/home/andrewwang/MoneyWatcher/node_modules/handlebars/lib/handlebars/helpers/with.js"],"sourcesContent":["import {\n  appendContextPath,\n  blockParams,\n  createFrame,\n  isEmpty,\n  isFunction\n} from '../utils';\nimport Exception from '../exception';\n\nexport default function(instance) {\n  instance.registerHelper('with', function(context, options) {\n    if (arguments.length != 2) {\n      throw new Exception('#with requires exactly one argument');\n    }\n    if (isFunction(context)) {\n      context = context.call(this);\n    }\n\n    let fn = options.fn;\n\n    if (!isEmpty(context)) {\n      let data = options.data;\n      if (options.data && options.ids) {\n        data = createFrame(options.data);\n        data.contextPath = appendContextPath(\n          options.data.contextPath,\n          options.ids[0]\n        );\n      }\n\n      return fn(context, {\n        data: data,\n        blockParams: blockParams([context], [data && data.contextPath])\n      });\n    } else {\n      return options.inverse(this);\n    }\n  });\n}\n"],"mappings":";;;;;;;;;;qBAMO,UAAU;yBACK,cAAc;;qBAErB,UAASA,QAAQ,EAAE;EAChCA,QAAQ,CAACC,cAAc,CAAC,MAAM,EAAE,UAASC,OAAO,EAAEC,OAAO,EAAE;IACzD,IAAIC,SAAS,CAACC,MAAM,IAAI,CAAC,EAAE;MACzB,MAAM,IAAAC,WAAA,YAAc,qCAAqC,CAAC;;IAE5D,IAAIC,MAAA,CAAAC,UAAA,CAAWN,OAAO,CAAC,EAAE;MACvBA,OAAO,GAAGA,OAAO,CAACO,IAAI,CAAC,IAAI,CAAC;;IAG9B,IAAIC,EAAE,GAAGP,OAAO,CAACO,EAAE;IAEnB,IAAI,CAACH,MAAA,CAAAI,OAAA,CAAQT,OAAO,CAAC,EAAE;MACrB,IAAIU,IAAI,GAAGT,OAAO,CAACS,IAAI;MACvB,IAAIT,OAAO,CAACS,IAAI,IAAIT,OAAO,CAACU,GAAG,EAAE;QAC/BD,IAAI,GAAGL,MAAA,CAAAO,WAAA,CAAYX,OAAO,CAACS,IAAI,CAAC;QAChCA,IAAI,CAACG,WAAW,GAAGR,MAAA,CAAAS,iBAAA,CACjBb,OAAO,CAACS,IAAI,CAACG,WAAW,EACxBZ,OAAO,CAACU,GAAG,CAAC,CAAC,CAAC,CACf;;MAGH,OAAOH,EAAE,CAACR,OAAO,EAAE;QACjBU,IAAI,EAAEA,IAAI;QACVK,WAAW,EAAEV,MAAA,CAAAU,WAAA,CAAY,CAACf,OAAO,CAAC,EAAE,CAACU,IAAI,IAAIA,IAAI,CAACG,WAAW,CAAC;OAC/D,CAAC;KACH,MAAM;MACL,OAAOZ,OAAO,CAACe,OAAO,CAAC,IAAI,CAAC;;GAE/B,CAAC;CACH"},"metadata":{},"sourceType":"script","externalDependencies":[]}