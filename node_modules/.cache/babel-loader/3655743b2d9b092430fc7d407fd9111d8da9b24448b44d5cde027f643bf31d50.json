{"ast":null,"code":"var _jsxFileName = \"/home/andrewwang/MoneyWatcher/src/pages/Merchant.js\",\n  _s = $RefreshSig$();\nimport { jsonFetch, buildIpAddress, getJsonData } from \"../components/common\";\nimport React from \"react\";\nimport MainContext from \"./MainContext\";\nimport { Link, useNavigate } from 'react-router-dom';\nimport Categories from \"../resources/Categories.js\";\nimport '../css/styles.css';\nimport BlueLink from \"./BlueLink.js\";\nimport NotLoggedInError from \"./NotLoggedInError.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Merchant = ({\n  active\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const [trans, setTrans] = React.useState([]);\n  const [cats, setCats] = React.useState({});\n  const [selected, setSelected] = React.useState(\"\");\n  const [mapState, setMapState] = React.useState(new Map());\n  const updateMap = (k, v) => {\n    const newMap = new Map();\n    if (v) {\n      const newMap = new Map();\n      mapState.forEach((value, key) => {\n        newMap.set(key, false);\n      });\n      newMap.set(k, v);\n      setMapState(map => newMap);\n    } else {\n      setMapState(map => mapState.set(k, v));\n    }\n  };\n  const ctx = React.useContext(MainContext);\n  React.useEffect(() => {\n    refresh();\n  }, []);\n  function refresh() {\n    //console.log('refresh');\n    getJsonData(\"/api/v1/merchant\", {}).then(d => {\n      // console.log(\"d=\", d);\n      d.json().then(json => {\n        // console.log(\"got merchant json: \", json);\n        // console.log(json.data)\n        if (json.status === \"success\") {\n          setTrans(json.data);\n          //console.log(json.data);\n          json.data.forEach(element => {\n            //console.log(\"merchant: %s\", element.name);\n            updateMap(element.name, false);\n          });\n        } else if (json.message === \"jwt malformed\" || json.message === \"user doesn't exist\" || json.message === \"not logged in\") {\n          localStorage.setItem(\"token\", \"\");\n          ctx.setActive1(\"0\");\n        }\n      });\n    }).catch(err => {\n      console.log(\"ERROR(merchant)\", err);\n    });\n    getJsonData(\"/api/v1/category/get_custom\", {}).then(d => {\n      // console.log(\"d=\", d);\n      d.json().then(json => {\n        // console.log(json);\n        // console.log(\"got merchant json: \", json);\n        // console.log(json.data)\n        if (json.status === \"success\") {\n          const cats = {};\n          cats.custom = json.data.custom;\n          cats.plaid = {};\n          for (const pr in Categories) {\n            // console.log(Categories[pr]);\n            cats.plaid[pr] = Categories[pr].map(l => l[1]);\n          }\n          setCats(cats);\n        } else if (json.message === \"jwt malformed\" || json.message === \"user doesn't exist\" || json.message === \"not logged in\") {\n          localStorage.setItem(\"token\", \"\");\n          ctx.setActive1(\"0\");\n        }\n      });\n    }).catch(err => {\n      console.log(\"ERROR(categories)\", err);\n    });\n  }\n  const drawHeader = () => {\n    return /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        className: \"table-th\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        className: \"table-th\",\n        children: \"Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        className: \"table-th\",\n        children: \"Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this);\n  };\n  const drawDropdown = () => {\n    if (Object.keys(cats).length === 0) {\n      return;\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"labelText\",\n        for: \"select_category\",\n        children: \"New Type: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"select_category\",\n        children: [/*#__PURE__*/_jsxDEV(\"optgroup\", {\n          label: \"CUSTOM\",\n          children: cats.custom.map(cat => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              \"data-primary\": \"CUSTOM\",\n              \"data-detailed\": cat,\n              value: cat,\n              children: cat\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 32\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 17\n        }, this), Object.entries(cats.plaid).map(([k, v]) => {\n          return /*#__PURE__*/_jsxDEV(\"optgroup\", {\n            label: k,\n            children: v.map(cat => {\n              // console.log(cat);\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                \"data-primary\": k,\n                \"data-detailed\": cat,\n                value: cat,\n                children: cat.split(k + \"_\")[1]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 36\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 28\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 16\n    }, this);\n  };\n  function modify_merchant(event) {\n    event.preventDefault();\n    const dropdown = event.target.select_category;\n    const selected = dropdown[dropdown.selectedIndex];\n    // console.log(selected.dataset.primary);\n    // console.log(selected.dataset.detailed);\n    getJsonData(\"/api/v1/merchant/update\", {\n      merchant: event.target.name.value,\n      primary: selected.dataset.primary,\n      detailed: selected.dataset.detailed\n    }).then(r => {\n      refresh();\n    }).catch(err => {\n      console.log(err);\n      //\n    });\n  }\n  function change(event) {\n    event.preventDefault();\n    setSelected(event.target.value);\n  }\n  const DrawTable = ({\n    tr\n  }) => {\n    const loading = !Array.isArray(tr);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"hr\", {\n        className: \"table-divideLine\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table-general\",\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [drawHeader(), loading ? \"loading\" : tr.map((t, index) => {\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: index % 2 === 0 ? \"table-tdEven\" : \"table-tdOdd\",\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"radio\",\n                  name: t.name,\n                  value: t.name,\n                  checked: mapState.get(t.name),\n                  onChange: () => {\n                    updateMap(t.name, true);\n                    setSelected(t.name);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: t.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: t.primary\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: t.detailed\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 37\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }, this);\n  };\n  //<DrawTable t={trans}/>\n  if (ctx.active === \"0\") return /*#__PURE__*/_jsxDEV(NotLoggedInError, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 190,\n    columnNumber: 13\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"blueHeader\",\n      children: \"Merchants\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"leftAlignedText\",\n      children: [\"A merchant is associated with both a type and a category. A category represents a broad classification that groups merchants based on common attributes (e.g., \\\"Food\\\"). Conversely, a type denotes a more specific classification within a category, grouping entities based on more narrowly defined characteristics (e.g., \\\"Food_Restaurant\\\").\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }, this), \"Typically, a merchant's category and type are determined by banks. However, especially for small merchants, banks may not always have the correct information and thus might classify some merchants based on their best 'guess'. To enable users to better track their spending, MoneyWatcher allows users to define a new type within the 'Custom' category. (\", /*#__PURE__*/_jsxDEV(BlueLink, {\n        to: \"/add_category\",\n        text: \"Define a new type here.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 48\n      }, this), \") It enables users to modify a merchant's existing type using either predefined types or custom types.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: modify_merchant,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"labelText\",\n          htmlFor: \"name\",\n          children: \"Merchant Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"name\",\n          name: \"name\",\n          value: selected,\n          onChange: change\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 17\n      }, this), drawDropdown(), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"centered-button\",\n          children: \"Update Merchant's Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DrawTable, {\n      tr: trans\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 193,\n    columnNumber: 9\n  }, this);\n};\n_s(Merchant, \"Gdob5dA2t996J9A4RHN9//FpGzc=\", false, function () {\n  return [useNavigate];\n});\n_c = Merchant;\nexport default Merchant;\nvar _c;\n$RefreshReg$(_c, \"Merchant\");","map":{"version":3,"names":["jsonFetch","buildIpAddress","getJsonData","React","MainContext","Link","useNavigate","Categories","BlueLink","NotLoggedInError","jsxDEV","_jsxDEV","Merchant","active","_s","navigate","trans","setTrans","useState","cats","setCats","selected","setSelected","mapState","setMapState","Map","updateMap","k","v","newMap","forEach","value","key","set","map","ctx","useContext","useEffect","refresh","then","d","json","status","data","element","name","message","localStorage","setItem","setActive1","catch","err","console","log","custom","plaid","pr","l","drawHeader","children","fileName","_jsxFileName","lineNumber","columnNumber","className","drawDropdown","Object","keys","length","for","id","label","cat","entries","split","modify_merchant","event","preventDefault","dropdown","target","select_category","selectedIndex","merchant","primary","dataset","detailed","r","change","DrawTable","tr","loading","Array","isArray","t","index","type","checked","get","onChange","to","text","onSubmit","htmlFor","_c","$RefreshReg$"],"sources":["/home/andrewwang/MoneyWatcher/src/pages/Merchant.js"],"sourcesContent":["import { jsonFetch, buildIpAddress, getJsonData } from \"../components/common\";\nimport React from \"react\";\nimport MainContext from \"./MainContext\"\nimport { Link, useNavigate } from 'react-router-dom'\nimport Categories from \"../resources/Categories.js\"\nimport '../css/styles.css'\nimport BlueLink from \"./BlueLink.js\";\nimport NotLoggedInError from \"./NotLoggedInError.js\";\n\n\n\nconst Merchant = ({ active }) => {\n    const navigate = useNavigate();\n    const [trans, setTrans] = React.useState([]);\n    const [cats, setCats] = React.useState({});\n    const [selected, setSelected] = React.useState(\"\");\n    const [mapState, setMapState] = React.useState(new Map());\n\n    \n    const updateMap = (k, v) => {\n        const newMap = new Map();\n        if (v) {\n            const newMap = new Map();\n            mapState.forEach((value, key) => {\n                newMap.set(key, false);\n            })\n            newMap.set(k, v);\n            setMapState(map => newMap);\n        } else {\n            setMapState(map => mapState.set(k, v));\n        }\n    }\n\n    \n\n\n    const ctx = React.useContext(MainContext)\n    React.useEffect(() => {\n        refresh();\n    }, []);\n    function refresh() {\n        //console.log('refresh');\n        getJsonData(\"/api/v1/merchant\", {})\n            .then((d) => {\n                // console.log(\"d=\", d);\n                d.json()\n                    .then((json) => {\n                        // console.log(\"got merchant json: \", json);\n                        // console.log(json.data)\n                        if (json.status === \"success\") {\n                            setTrans(json.data);\n                            //console.log(json.data);\n                            json.data.forEach(element => {\n                                //console.log(\"merchant: %s\", element.name);\n                                updateMap(element.name, false);\n                            });\n                        } else if (json.message === \"jwt malformed\" || json.message === \"user doesn't exist\" || json.message === \"not logged in\") {\n                            localStorage.setItem(\"token\", \"\");\n                            ctx.setActive1(\"0\");\n                        }\n                    })\n            }).catch((err) => {\n                console.log(\"ERROR(merchant)\", err);\n            })\n\n        getJsonData(\"/api/v1/category/get_custom\", {})\n            .then((d) => {\n                // console.log(\"d=\", d);\n                d.json()\n                    .then((json) => {\n                        // console.log(json);\n                        // console.log(\"got merchant json: \", json);\n                        // console.log(json.data)\n                        if (json.status === \"success\") {\n                            const cats = {};\n                            cats.custom = json.data.custom;\n                            cats.plaid = {};\n                            for (const pr in Categories) {\n                                // console.log(Categories[pr]);\n                                cats.plaid[pr] = Categories[pr].map((l) => l[1]);\n                            }\n                            setCats(cats);\n                        } else if (json.message === \"jwt malformed\" || json.message === \"user doesn't exist\" || json.message === \"not logged in\") {\n                            localStorage.setItem(\"token\", \"\");\n                            ctx.setActive1(\"0\");\n                        }\n                    })\n            }).catch((err) => {\n                console.log(\"ERROR(categories)\", err);\n            })\n    }\n    const drawHeader = () => {\n        return (\n            <tr>\n                <th></th>\n                <th className=\"table-th\">Name</th>\n                <th className=\"table-th\">Category</th>\n                <th className=\"table-th\">Type</th>\n            </tr>\n        )\n    }\n    const drawDropdown = () => {\n        if (Object.keys(cats).length === 0) {\n            return;\n        }\n        return <div>\n            <label className=\"labelText\" for=\"select_category\">New Type: </label>\n            <select id=\"select_category\">\n                <optgroup label=\"CUSTOM\">\n                    {cats.custom.map((cat) => {\n                        return <option data-primary=\"CUSTOM\" data-detailed={cat} value={cat}>{cat}</option>\n                    })}\n                </optgroup>\n                {Object.entries(cats.plaid).map(([k, v]) => {\n                    return <optgroup label={k}>\n                        {v.map((cat) => {\n                            // console.log(cat);\n                            return <option data-primary={k} data-detailed={cat} value={cat}>{cat.split(k + \"_\")[1]}</option>\n                        })}\n                    </optgroup>\n                })}\n                \n            </select>\n        </div>\n    }\n    function modify_merchant(event) {\n        event.preventDefault();\n        const dropdown = event.target.select_category;\n        const selected = dropdown[dropdown.selectedIndex];\n        // console.log(selected.dataset.primary);\n        // console.log(selected.dataset.detailed);\n        getJsonData(\"/api/v1/merchant/update\", {\n            merchant: event.target.name.value,\n            primary: selected.dataset.primary,\n            detailed: selected.dataset.detailed\n        }).then((r) => {\n            refresh();\n        }).catch((err) => {\n            console.log(err);\n            //\n        })\n    }\n    function change(event) {\n        event.preventDefault();\n        setSelected(event.target.value);\n    }\n\n    \n\n    const DrawTable = (({ tr }) => {\n        const loading = !Array.isArray(tr);\n        return (\n            <div>\n                <hr className=\"table-divideLine\" />\n                <table className=\"table-general\">\n                    <tbody>\n                        {drawHeader()}\n                        {loading ? \"loading\" :\n                            tr.map((t, index) => {\n                                return (\n                                    <tr className={index % 2 === 0 ? \"table-tdEven\" : \"table-tdOdd\"}>\n                                        <td>\n                                            <input\n                                                type=\"radio\"\n                                                name={t.name}\n                                                value={t.name}\n                                                checked={mapState.get(t.name)}\n                                                onChange={ () => {\n                                                    updateMap(t.name, true);\n                                                    setSelected(t.name);\n                                                }}\n                                            />\n                                            \n                                        </td>\n                                        <td>{t.name}</td>\n                                        <td>{t.primary}</td>\n                                        <td>{t.detailed}</td>\n                                    </tr>\n                                )\n                            })\n                        }\n                    </tbody>\n                </table>\n            </div>\n        )\n    })\n    //<DrawTable t={trans}/>\n    if (ctx.active === \"0\")\n        return (\n            <NotLoggedInError />\n        )\n    return (\n        <div>\n            <h1 className=\"blueHeader\">Merchants</h1>\n            <p className=\"leftAlignedText\">\n                A merchant is associated with both a type and a category.\n                A category represents a broad classification that groups merchants based on common attributes (e.g., \"Food\").\n                Conversely, a type denotes a more specific classification within a category, grouping entities based\n                on more narrowly defined characteristics (e.g., \"Food_Restaurant\").\n                <br />\n                <br />\n                Typically, a merchant's category and type are determined by banks.\n                However, especially for small merchants, banks may not always have the correct information\n                and thus might classify some merchants based on their best 'guess'.\n                To enable users to better track their spending, MoneyWatcher allows users to define a new type\n                within the 'Custom' category. (<BlueLink to=\"/add_category\" text=\"Define a new type here.\" />)\n                It enables users to modify a merchant's existing type using either predefined types or custom types.\n            </p>\n\n            <br />\n            <form onSubmit={modify_merchant}>\n                <div>\n                    <label className=\"labelText\" htmlFor=\"name\">Merchant Name</label>\n                    <input id=\"name\" name=\"name\" value={selected} onChange={change} />\n                </div>\n                {drawDropdown()}\n                <div className=\"button-container\">\n                <button className=\"centered-button\">Update Merchant's Type</button>\n                </div>\n            </form>\n            <DrawTable tr={trans} />\n        </div>\n    )\n}\n\nexport default Merchant"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}